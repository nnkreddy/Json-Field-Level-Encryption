<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:encryption="http://www.mulesoft.org/schema/mule/encryption" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/encryption http://www.mulesoft.org/schema/mule/encryption/current/mule-encryption.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd" version="EE-3.6.1">
    
    <apikit:config name="fieldLevelApi-config" raml="fieldLevelApi.raml" consoleEnabled="true" consolePath="console" doc:name="Router"/>
    <http:listener-config name="fieldLevelApi-httpListenerConfig" host="localhost" port="8082" doc:name="HTTP Listener Configuration"/>
    <encryption:config name="Encryption" doc:name="Encryption"/>
    <apikit:mapping-exception-strategy name="fieldLevelApi-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    <flow name="fieldLevelApi-main">
        <http:listener config-ref="fieldLevelApi-httpListenerConfig" path="/JsonMap/*" doc:name="HTTP"/>
        <logger message="Received Message #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <json:json-to-object-transformer returnClass="java.util.LinkedHashMap" doc:name="JSON to Object"/>
        <apikit:router config-ref="fieldLevelApi-config" doc:name="APIkit Router"/>

        <logger message="After Grrovy conversion #[payload]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="Content-Type" value="application/json"/>
        </message-properties-transformer>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <exception-strategy ref="fieldLevelApi-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="post:/Encrypt:fieldLevelApi-config">
        <foreach collection="#[payload.entrySet()]" doc:name="For Each">
            <choice doc:name="Choice">
                <when expression="#[payload.value.Encrypt == &quot;TRUE&quot;]">
                    <enricher source="#[payload]" target="#[payload.value.value]" doc:name="Message Enricher">
                        <encryption:encrypt config-ref="Encryption" input-ref="#[payload.value.value]" using="JCE_ENCRYPTER" doc:name="Encryption">
                            <encryption:jce-encrypter key="PlainKey4JCEMode" algorithm="AES" encryptionMode="CBC"/>
                        </encryption:encrypt>
                    </enricher>
                </when>
                <otherwise>
                    <logger message="No Changes" level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>

    </flow>
    
    <flow name="post:/Decrypt:fieldLevelApi-config">
        <foreach collection="#[payload.entrySet()]" doc:name="For Each">
            <choice doc:name="Choice">
                <when expression="#[payload.value.Encrypt == &quot;TRUE&quot;]">
                    <enricher source="#[payload]" target="#[payload.value.value]" doc:name="Message Enricher">
                        <encryption:decrypt config-ref="Encryption" input-ref="#[payload.value.value]" using="JCE_ENCRYPTER" doc:name="Decryption">
                            <encryption:jce-encrypter key="PlainKey4JCEMode" algorithm="AES" encryptionMode="CBC"/>
                        </encryption:decrypt>
                    </enricher>
                </when>
                <otherwise>
                    <logger message="No Changes" level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>

    </flow>
</mule>
